package com.woniu.gdj.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CashlogExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cashlog
     *
     * @mbggenerated Mon Jun 08 16:26:28 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cashlog
     *
     * @mbggenerated Mon Jun 08 16:26:28 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cashlog
     *
     * @mbggenerated Mon Jun 08 16:26:28 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cashlog
     *
     * @mbggenerated Mon Jun 08 16:26:28 CST 2020
     */
    public CashlogExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cashlog
     *
     * @mbggenerated Mon Jun 08 16:26:28 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cashlog
     *
     * @mbggenerated Mon Jun 08 16:26:28 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cashlog
     *
     * @mbggenerated Mon Jun 08 16:26:28 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cashlog
     *
     * @mbggenerated Mon Jun 08 16:26:28 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cashlog
     *
     * @mbggenerated Mon Jun 08 16:26:28 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cashlog
     *
     * @mbggenerated Mon Jun 08 16:26:28 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cashlog
     *
     * @mbggenerated Mon Jun 08 16:26:28 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cashlog
     *
     * @mbggenerated Mon Jun 08 16:26:28 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cashlog
     *
     * @mbggenerated Mon Jun 08 16:26:28 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cashlog
     *
     * @mbggenerated Mon Jun 08 16:26:28 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cashlog
     *
     * @mbggenerated Mon Jun 08 16:26:28 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUsercashlogidIsNull() {
            addCriterion("userCashLogID is null");
            return (Criteria) this;
        }

        public Criteria andUsercashlogidIsNotNull() {
            addCriterion("userCashLogID is not null");
            return (Criteria) this;
        }

        public Criteria andUsercashlogidEqualTo(Integer value) {
            addCriterion("userCashLogID =", value, "usercashlogid");
            return (Criteria) this;
        }

        public Criteria andUsercashlogidNotEqualTo(Integer value) {
            addCriterion("userCashLogID <>", value, "usercashlogid");
            return (Criteria) this;
        }

        public Criteria andUsercashlogidGreaterThan(Integer value) {
            addCriterion("userCashLogID >", value, "usercashlogid");
            return (Criteria) this;
        }

        public Criteria andUsercashlogidGreaterThanOrEqualTo(Integer value) {
            addCriterion("userCashLogID >=", value, "usercashlogid");
            return (Criteria) this;
        }

        public Criteria andUsercashlogidLessThan(Integer value) {
            addCriterion("userCashLogID <", value, "usercashlogid");
            return (Criteria) this;
        }

        public Criteria andUsercashlogidLessThanOrEqualTo(Integer value) {
            addCriterion("userCashLogID <=", value, "usercashlogid");
            return (Criteria) this;
        }

        public Criteria andUsercashlogidIn(List<Integer> values) {
            addCriterion("userCashLogID in", values, "usercashlogid");
            return (Criteria) this;
        }

        public Criteria andUsercashlogidNotIn(List<Integer> values) {
            addCriterion("userCashLogID not in", values, "usercashlogid");
            return (Criteria) this;
        }

        public Criteria andUsercashlogidBetween(Integer value1, Integer value2) {
            addCriterion("userCashLogID between", value1, value2, "usercashlogid");
            return (Criteria) this;
        }

        public Criteria andUsercashlogidNotBetween(Integer value1, Integer value2) {
            addCriterion("userCashLogID not between", value1, value2, "usercashlogid");
            return (Criteria) this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("userID is null");
            return (Criteria) this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("userID is not null");
            return (Criteria) this;
        }

        public Criteria andUseridEqualTo(Integer value) {
            addCriterion("userID =", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotEqualTo(Integer value) {
            addCriterion("userID <>", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThan(Integer value) {
            addCriterion("userID >", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("userID >=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThan(Integer value) {
            addCriterion("userID <", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThanOrEqualTo(Integer value) {
            addCriterion("userID <=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridIn(List<Integer> values) {
            addCriterion("userID in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotIn(List<Integer> values) {
            addCriterion("userID not in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridBetween(Integer value1, Integer value2) {
            addCriterion("userID between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotBetween(Integer value1, Integer value2) {
            addCriterion("userID not between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andUsercashlogdtIsNull() {
            addCriterion("userCashLogDT is null");
            return (Criteria) this;
        }

        public Criteria andUsercashlogdtIsNotNull() {
            addCriterion("userCashLogDT is not null");
            return (Criteria) this;
        }

        public Criteria andUsercashlogdtEqualTo(Date value) {
            addCriterion("userCashLogDT =", value, "usercashlogdt");
            return (Criteria) this;
        }

        public Criteria andUsercashlogdtNotEqualTo(Date value) {
            addCriterion("userCashLogDT <>", value, "usercashlogdt");
            return (Criteria) this;
        }

        public Criteria andUsercashlogdtGreaterThan(Date value) {
            addCriterion("userCashLogDT >", value, "usercashlogdt");
            return (Criteria) this;
        }

        public Criteria andUsercashlogdtGreaterThanOrEqualTo(Date value) {
            addCriterion("userCashLogDT >=", value, "usercashlogdt");
            return (Criteria) this;
        }

        public Criteria andUsercashlogdtLessThan(Date value) {
            addCriterion("userCashLogDT <", value, "usercashlogdt");
            return (Criteria) this;
        }

        public Criteria andUsercashlogdtLessThanOrEqualTo(Date value) {
            addCriterion("userCashLogDT <=", value, "usercashlogdt");
            return (Criteria) this;
        }

        public Criteria andUsercashlogdtIn(List<Date> values) {
            addCriterion("userCashLogDT in", values, "usercashlogdt");
            return (Criteria) this;
        }

        public Criteria andUsercashlogdtNotIn(List<Date> values) {
            addCriterion("userCashLogDT not in", values, "usercashlogdt");
            return (Criteria) this;
        }

        public Criteria andUsercashlogdtBetween(Date value1, Date value2) {
            addCriterion("userCashLogDT between", value1, value2, "usercashlogdt");
            return (Criteria) this;
        }

        public Criteria andUsercashlogdtNotBetween(Date value1, Date value2) {
            addCriterion("userCashLogDT not between", value1, value2, "usercashlogdt");
            return (Criteria) this;
        }

        public Criteria andUsercashlogcashIsNull() {
            addCriterion("userCashLogCash is null");
            return (Criteria) this;
        }

        public Criteria andUsercashlogcashIsNotNull() {
            addCriterion("userCashLogCash is not null");
            return (Criteria) this;
        }

        public Criteria andUsercashlogcashEqualTo(BigDecimal value) {
            addCriterion("userCashLogCash =", value, "usercashlogcash");
            return (Criteria) this;
        }

        public Criteria andUsercashlogcashNotEqualTo(BigDecimal value) {
            addCriterion("userCashLogCash <>", value, "usercashlogcash");
            return (Criteria) this;
        }

        public Criteria andUsercashlogcashGreaterThan(BigDecimal value) {
            addCriterion("userCashLogCash >", value, "usercashlogcash");
            return (Criteria) this;
        }

        public Criteria andUsercashlogcashGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("userCashLogCash >=", value, "usercashlogcash");
            return (Criteria) this;
        }

        public Criteria andUsercashlogcashLessThan(BigDecimal value) {
            addCriterion("userCashLogCash <", value, "usercashlogcash");
            return (Criteria) this;
        }

        public Criteria andUsercashlogcashLessThanOrEqualTo(BigDecimal value) {
            addCriterion("userCashLogCash <=", value, "usercashlogcash");
            return (Criteria) this;
        }

        public Criteria andUsercashlogcashIn(List<BigDecimal> values) {
            addCriterion("userCashLogCash in", values, "usercashlogcash");
            return (Criteria) this;
        }

        public Criteria andUsercashlogcashNotIn(List<BigDecimal> values) {
            addCriterion("userCashLogCash not in", values, "usercashlogcash");
            return (Criteria) this;
        }

        public Criteria andUsercashlogcashBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("userCashLogCash between", value1, value2, "usercashlogcash");
            return (Criteria) this;
        }

        public Criteria andUsercashlogcashNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("userCashLogCash not between", value1, value2, "usercashlogcash");
            return (Criteria) this;
        }

        public Criteria andUsercashloglastcashIsNull() {
            addCriterion("userCashLogLastCash is null");
            return (Criteria) this;
        }

        public Criteria andUsercashloglastcashIsNotNull() {
            addCriterion("userCashLogLastCash is not null");
            return (Criteria) this;
        }

        public Criteria andUsercashloglastcashEqualTo(BigDecimal value) {
            addCriterion("userCashLogLastCash =", value, "usercashloglastcash");
            return (Criteria) this;
        }

        public Criteria andUsercashloglastcashNotEqualTo(BigDecimal value) {
            addCriterion("userCashLogLastCash <>", value, "usercashloglastcash");
            return (Criteria) this;
        }

        public Criteria andUsercashloglastcashGreaterThan(BigDecimal value) {
            addCriterion("userCashLogLastCash >", value, "usercashloglastcash");
            return (Criteria) this;
        }

        public Criteria andUsercashloglastcashGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("userCashLogLastCash >=", value, "usercashloglastcash");
            return (Criteria) this;
        }

        public Criteria andUsercashloglastcashLessThan(BigDecimal value) {
            addCriterion("userCashLogLastCash <", value, "usercashloglastcash");
            return (Criteria) this;
        }

        public Criteria andUsercashloglastcashLessThanOrEqualTo(BigDecimal value) {
            addCriterion("userCashLogLastCash <=", value, "usercashloglastcash");
            return (Criteria) this;
        }

        public Criteria andUsercashloglastcashIn(List<BigDecimal> values) {
            addCriterion("userCashLogLastCash in", values, "usercashloglastcash");
            return (Criteria) this;
        }

        public Criteria andUsercashloglastcashNotIn(List<BigDecimal> values) {
            addCriterion("userCashLogLastCash not in", values, "usercashloglastcash");
            return (Criteria) this;
        }

        public Criteria andUsercashloglastcashBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("userCashLogLastCash between", value1, value2, "usercashloglastcash");
            return (Criteria) this;
        }

        public Criteria andUsercashloglastcashNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("userCashLogLastCash not between", value1, value2, "usercashloglastcash");
            return (Criteria) this;
        }

        public Criteria andThenoteIsNull() {
            addCriterion("theNote is null");
            return (Criteria) this;
        }

        public Criteria andThenoteIsNotNull() {
            addCriterion("theNote is not null");
            return (Criteria) this;
        }

        public Criteria andThenoteEqualTo(String value) {
            addCriterion("theNote =", value, "thenote");
            return (Criteria) this;
        }

        public Criteria andThenoteNotEqualTo(String value) {
            addCriterion("theNote <>", value, "thenote");
            return (Criteria) this;
        }

        public Criteria andThenoteGreaterThan(String value) {
            addCriterion("theNote >", value, "thenote");
            return (Criteria) this;
        }

        public Criteria andThenoteGreaterThanOrEqualTo(String value) {
            addCriterion("theNote >=", value, "thenote");
            return (Criteria) this;
        }

        public Criteria andThenoteLessThan(String value) {
            addCriterion("theNote <", value, "thenote");
            return (Criteria) this;
        }

        public Criteria andThenoteLessThanOrEqualTo(String value) {
            addCriterion("theNote <=", value, "thenote");
            return (Criteria) this;
        }

        public Criteria andThenoteLike(String value) {
            addCriterion("theNote like", value, "thenote");
            return (Criteria) this;
        }

        public Criteria andThenoteNotLike(String value) {
            addCriterion("theNote not like", value, "thenote");
            return (Criteria) this;
        }

        public Criteria andThenoteIn(List<String> values) {
            addCriterion("theNote in", values, "thenote");
            return (Criteria) this;
        }

        public Criteria andThenoteNotIn(List<String> values) {
            addCriterion("theNote not in", values, "thenote");
            return (Criteria) this;
        }

        public Criteria andThenoteBetween(String value1, String value2) {
            addCriterion("theNote between", value1, value2, "thenote");
            return (Criteria) this;
        }

        public Criteria andThenoteNotBetween(String value1, String value2) {
            addCriterion("theNote not between", value1, value2, "thenote");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cashlog
     *
     * @mbggenerated do_not_delete_during_merge Mon Jun 08 16:26:28 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cashlog
     *
     * @mbggenerated Mon Jun 08 16:26:28 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}